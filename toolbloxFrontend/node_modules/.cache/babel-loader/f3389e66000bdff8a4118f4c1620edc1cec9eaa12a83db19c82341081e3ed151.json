{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { chargeFiles, chargeFilesData } from '../api/files';\nimport { addFiles, addLines } from '../redux/reducer';\nexport const usePrechargeData = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    selected,\n    files,\n    lines\n  } = useSelector(state => state.filesReducer);\n  useEffect(() => {\n    const chargeData = async () => {\n      const filesData = await chargeFilesData(selected);\n      const files = await chargeFiles();\n      Promise.all([filesData, files]).then(result => {\n        if (selected) {\n          dispatch(addLines(result[0]));\n        }\n        dispatch(addFiles(result[1]));\n      });\n    };\n    chargeData();\n  }, [selected, dispatch]);\n  return {\n    selected,\n    files,\n    lines\n  };\n};\n_s(usePrechargeData, \"eOPAO70XYxHkeJwvXRtIyTzmb4E=\", false, function () {\n  return [useDispatch, useSelector];\n});","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","chargeFiles","chargeFilesData","addFiles","addLines","usePrechargeData","dispatch","selected","files","lines","state","filesReducer","chargeData","filesData","Promise","all","then","result"],"sources":["/Users/gustavoriera/Desktop/Desarrollo/desafio toolbox/toolboxfrontend/src/hooks/usePrechargeData.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch,useSelector } from 'react-redux'\nimport { chargeFiles, chargeFilesData } from '../api/files';\nimport { addFiles, addLines } from '../redux/reducer';\n\nexport const usePrechargeData = () => {\n    const dispatch=useDispatch();\n    const {selected,files,lines}=useSelector(state=>state.filesReducer)\n  useEffect(()=>{\n    const chargeData=async()=>{\n        const filesData=await chargeFilesData(selected);\n        const files=await chargeFiles();\n        Promise.all([filesData,files])\n        .then(result=>{\n          if(selected){\n            dispatch(addLines(result[0]))\n          }\n          dispatch(addFiles(result[1]))\n        })\n      }\n      chargeData();\n  },[selected,dispatch])\n  return {\n    selected,files,lines\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD,SAASC,WAAW,EAAEC,eAAe,QAAQ,cAAc;AAC3D,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,kBAAkB;AAErD,OAAO,MAAMC,gBAAgB,GAAG,MAAM;EAAA;EAClC,MAAMC,QAAQ,GAACP,WAAW,EAAE;EAC5B,MAAM;IAACQ,QAAQ;IAACC,KAAK;IAACC;EAAK,CAAC,GAACT,WAAW,CAACU,KAAK,IAAEA,KAAK,CAACC,YAAY,CAAC;EACrEb,SAAS,CAAC,MAAI;IACZ,MAAMc,UAAU,GAAC,YAAS;MACtB,MAAMC,SAAS,GAAC,MAAMX,eAAe,CAACK,QAAQ,CAAC;MAC/C,MAAMC,KAAK,GAAC,MAAMP,WAAW,EAAE;MAC/Ba,OAAO,CAACC,GAAG,CAAC,CAACF,SAAS,EAACL,KAAK,CAAC,CAAC,CAC7BQ,IAAI,CAACC,MAAM,IAAE;QACZ,IAAGV,QAAQ,EAAC;UACVD,QAAQ,CAACF,QAAQ,CAACa,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B;QACAX,QAAQ,CAACH,QAAQ,CAACc,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC;IACJ,CAAC;IACDL,UAAU,EAAE;EAChB,CAAC,EAAC,CAACL,QAAQ,EAACD,QAAQ,CAAC,CAAC;EACtB,OAAO;IACLC,QAAQ;IAACC,KAAK;IAACC;EACjB,CAAC;AACH,CAAC;AAAA,GApBYJ,gBAAgB;EAAA,QACVN,WAAW,EACGC,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}